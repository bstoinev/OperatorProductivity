@model Powerfront.BackendTest.Models.OperatorReportViewModelRef


@{
    ViewBag.Title = "Operator Report";

    var deviceListItems = new List<SelectListItem>
{
new SelectListItem { Text = "[ Any ]", Value = "Any", Selected = true }
};

    deviceListItems.AddRange(Model.DeviceList.Select(d => new SelectListItem { Text = d, Value = d }));

    var websiteListItems = new List<SelectListItem>
{
new SelectListItem { Text = "[ Any ]", Value = "Any", Selected = true }
};

    websiteListItems.AddRange(Model.WebsiteList.Select(w => new SelectListItem { Text = w, Value = w }));

    var predefinedPeriodListItems = new List<SelectListItem>
{
new SelectListItem { Text = "[ None ]", Value = "None", Disabled = true }
};

    predefinedPeriodListItems.AddRange(Model.PredefinedDateFilter.Select(p => new SelectListItem { Text = p, Value = p }));
}

<h2>Productivity Report (SPA)</h2>

<div class="row">
    <div class="col-2">
        <div id="predefinedPeriodFilterRadio" class="radio">
            <label>
                @Html.RadioButton("PeriodFilterType", "pre-defined", true)
                Pre-defined
            </label>
        </div>

        <div id="customPeriodFilterRadio" class="radio">
            <label>
                @Html.RadioButton("PeriodFilterType", "custom")
                Custom
            </label>
        </div>
    </div>

    <div class="col-3">
        <div id="predefinedPeriodHandles">
            @Html.DropDownListFor(m => m.PredefinedDateFilter, predefinedPeriodListItems, new { @class = "form-control" })
        </div>

        <div id="customPeriodHandles" class="d-none">
            @Html.TextBoxFor(m => m.StartDate, new { id = "startDateInput", @class = "form-control", placeholder = "Start Date" })
            <br />
            @Html.TextBoxFor(m => m.EndDate, new { id = "endDateInput", @class = "form-control", placeholder = "End Date" })
        </div>
    </div>

    <div class="col-2 text-right">
        <label class="col-form-label">
            Device
        </label>

        <br />
        <br />
        <label class="col-form-label">
            Website
        </label>
    </div>

    <div class="col-3">
        @Html.DropDownListFor(m => m.DeviceList, deviceListItems, new { @class = "form-control" })
        <br />
        @Html.DropDownListFor(m => m.WebsiteList, websiteListItems, new { @class = "form-control" })
    </div>
</div>


<table class="table table-bordered">
    <thead>
        <tr>
            <th rowspan="2">S.No.</th>
            <th rowspan="2">Operator Name</th>
            <th colspan="3">Proactive</th>
            <th colspan="3">Reactive</th>
            <th colspan="2">Chat duration</th>
        </tr>

        <tr>
            <th>Sent</th>
            <th>Answered</th>
            <th>Rate [%]</th>
            <th>Received</th>
            <th>Answered</th>
            <th>Rate [%]</th>
            <th>Total</th>
            <th>Average</th>
        </tr>
    </thead>
    <tbody data-bind="foreach: Rows">
        <tr>
            <td data-bind="text: ID"></td>
            <td data-bind="text: Name"></td>
            <td data-bind="text: ProactiveSent"></td>
            <td data-bind="text: ProactiveAnswered"></td>
            <td data-bind="text: ProactiveResponseRate"></td>
            <td data-bind="text: ReactiveReceived"></td>
            <td data-bind="text: ReactiveAnswered"></td>
            <td data-bind="text: ReactiveResponseRate"></td>
            <td data-bind="text: TotalChatLengthSeconds"></td>
            <td data-bind="text: AverageChatLenghtSeconds"></td>
        </tr>
    </tbody>
</table>


@section Scripts {
    <script src="~/Scripts/bootstrap-datepicker.min.js"></script>

    <script>
        $(document).ready(Document_Ready);

        function ApplyFilter() {
            var payload = {
                Device: $()
            };

            settings.type = "POST";
            settings.contentType = "application/json";
            settings.url = "/home/OperatorProductivityData";
            settings.data = JSON.stringify(payload);
            settings.success = function (response) {
                containerElement.html(response);
            };
            settings.error = function (response) {
                dpr.ShowMessage({
                    content: '<span class="notify-text">' + response.responseText + '</span>',
                    type: "alert",
                    timeout: 10000
                });

                containerElement.html(response.responseText);
            };
            settings.complete = function (response) {
                var to = containerElement.data("timeout");
                if (to) {
                    clearTimeout(to);
                }

                if (onComplete) {
                    onComplete(response);
                }
            };

            $.ajax(settings);

        }

        function Document_Ready(e) {
            var calendarDefaults = {
                autoclose: true,
                todayHighlight: true,
                todayBtn: "linked",
                endDate: new Date(2018, 4, 13)
            };

            $(".radio").on("click", PeriodMaskRadio_Click);

            $(startDateInput).datepicker(calendarDefaults);
            $(endDateInput).datepicker(calendarDefaults);
        }

        function PeriodMaskRadio_Click(e) {
            var sender = $(e.target).closest("div");

            if (sender.is(predefinedPeriodFilterRadio)) {
                $(customPeriodHandles).addClass("d-none");
                $(predefinedPeriodHandles).removeClass("d-none");
            }
            else if (sender.is(customPeriodFilterRadio)) {
                $(predefinedPeriodHandles).addClass("d-none");
                $(customPeriodHandles).removeClass("d-none");
            }
        }
    </script>
}